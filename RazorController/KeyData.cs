namespace RazorController;

public struct KeyData
{
    public Key Code;
    public bool Shift;
    
    public static readonly Dictionary<char, KeyData> KeyDictionary;
    
    static KeyData() {
            KeyDictionary = new Dictionary<char, KeyData>
            {
                { '`', new KeyData { Code = Key.Tilde } },
                { '1', new KeyData { Code = Key.One } },
                { '2', new KeyData { Code = Key.Two } },
                { '3', new KeyData { Code = Key.Three } },
                { '4', new KeyData { Code = Key.Four } },
                { '5', new KeyData { Code = Key.Five } },
                { '6', new KeyData { Code = Key.Six } },
                { '7', new KeyData { Code = Key.Seven } },
                { '8', new KeyData { Code = Key.Eight } },
                { '9', new KeyData { Code = Key.Nine } },
                { '0', new KeyData { Code = Key.Zero } },
                { '-', new KeyData { Code = Key.Dash } },
                { '=', new KeyData { Code = Key.Equals } },
                { 'q', new KeyData { Code = Key.Q } },
                { 'w', new KeyData { Code = Key.W } },
                { 'e', new KeyData { Code = Key.E } },
                { 'r', new KeyData { Code = Key.R } },
                { 't', new KeyData { Code = Key.T } },
                { 'y', new KeyData { Code = Key.Y } },
                { 'u', new KeyData { Code = Key.U } },
                { 'i', new KeyData { Code = Key.I } },
                { 'o', new KeyData { Code = Key.O } },
                { 'p', new KeyData { Code = Key.P } },
                { '[', new KeyData { Code = Key.OpenBracketBrace } },
                { ']', new KeyData { Code = Key.CloseBracketBrace } },
                { 'a', new KeyData { Code = Key.A } },
                { 's', new KeyData { Code = Key.S } },
                { 'd', new KeyData { Code = Key.D } },
                { 'f', new KeyData { Code = Key.F } },
                { 'g', new KeyData { Code = Key.G } },
                { 'h', new KeyData { Code = Key.H } },
                { 'j', new KeyData { Code = Key.J } },
                { 'k', new KeyData { Code = Key.K } },
                { 'l', new KeyData { Code = Key.L } },
                { ';', new KeyData { Code = Key.Semicolon } },
                { '\'', new KeyData { Code = Key.Apostrophe } },
                { '\\', new KeyData { Code = Key.Backslash } },
                { 'z', new KeyData { Code = Key.Z } },
                { 'x', new KeyData { Code = Key.X } },
                { 'c', new KeyData { Code = Key.C } },
                { 'v', new KeyData { Code = Key.V } },
                { 'b', new KeyData { Code = Key.B } },
                { 'n', new KeyData { Code = Key.N } },
                { 'm', new KeyData { Code = Key.M } },
                { ',', new KeyData { Code = Key.Comma } },
                { '.', new KeyData { Code = Key.Dot } },
                { '/', new KeyData { Code = Key.Slash } },
                { ' ', new KeyData { Code = Key.Space } },
                { '~', new KeyData { Code = Key.Tilde, Shift = true } },
                { '!', new KeyData { Code = Key.One, Shift = true } },
                { '@', new KeyData { Code = Key.Two, Shift = true } },
                { '#', new KeyData { Code = Key.Three, Shift = true } },
                { '$', new KeyData { Code = Key.Four, Shift = true } },
                { '%', new KeyData { Code = Key.Five, Shift = true } },
                { '^', new KeyData { Code = Key.Six, Shift = true } },
                { '&', new KeyData { Code = Key.Seven, Shift = true } },
                { '*', new KeyData { Code = Key.Eight, Shift = true } },
                { '(', new KeyData { Code = Key.Nine, Shift = true } },
                { ')', new KeyData { Code = Key.Zero, Shift = true } },
                { '_', new KeyData { Code = Key.Dash, Shift = true } },
                { '+', new KeyData { Code = Key.Equals, Shift = true } },
                { 'Q', new KeyData { Code = Key.Q, Shift = true } },
                { 'W', new KeyData { Code = Key.W, Shift = true } },
                { 'E', new KeyData { Code = Key.E, Shift = true } },
                { 'R', new KeyData { Code = Key.R, Shift = true } },
                { 'T', new KeyData { Code = Key.T, Shift = true } },
                { 'Y', new KeyData { Code = Key.Y, Shift = true } },
                { 'U', new KeyData { Code = Key.U, Shift = true } },
                { 'I', new KeyData { Code = Key.I, Shift = true } },
                { 'O', new KeyData { Code = Key.O, Shift = true } },
                { 'P', new KeyData { Code = Key.P, Shift = true } },
                { '{', new KeyData { Code = Key.OpenBracketBrace, Shift = true } },
                { '}', new KeyData { Code = Key.CloseBracketBrace, Shift = true } },
                { 'A', new KeyData { Code = Key.A, Shift = true } },
                { 'S', new KeyData { Code = Key.S, Shift = true } },
                { 'D', new KeyData { Code = Key.D, Shift = true } },
                { 'F', new KeyData { Code = Key.F, Shift = true } },
                { 'G', new KeyData { Code = Key.G, Shift = true } },
                { 'H', new KeyData { Code = Key.H, Shift = true } },
                { 'J', new KeyData { Code = Key.J, Shift = true } },
                { 'K', new KeyData { Code = Key.K, Shift = true } },
                { 'L', new KeyData { Code = Key.L, Shift = true } },
                { ':', new KeyData { Code = Key.Semicolon, Shift = true } },
                { '"', new KeyData { Code = Key.Apostrophe, Shift = true } },
                { '|', new KeyData { Code = Key.Backslash, Shift = true } },
                { 'Z', new KeyData { Code = Key.Z, Shift = true } },
                { 'X', new KeyData { Code = Key.X, Shift = true } },
                { 'C', new KeyData { Code = Key.C, Shift = true } },
                { 'V', new KeyData { Code = Key.V, Shift = true } },
                { 'B', new KeyData { Code = Key.B, Shift = true } },
                { 'N', new KeyData { Code = Key.N, Shift = true } },
                { 'M', new KeyData { Code = Key.M, Shift = true } },
                { '<', new KeyData { Code = Key.Comma, Shift = true } },
                { '>', new KeyData { Code = Key.Dot, Shift = true } },
                { '?', new KeyData { Code = Key.Slash, Shift = true } }
            };
    }
    
}